{"version":3,"sources":["js/main.js"],"names":["rbgToHex","elem","currentStyle","bg","window","getComputedStyle","document","defaultView","getPropertyValue","search","hex","x","parseInt","toString","slice","match","colorBoxes","querySelectorAll","forEach","element","newElement","createElement","innerText","parentNode","appendChild","buttonsWrapper","querySelector","buttonsHtml","innerHTML","containerHtml","classList","add","buttonsHtmlText","split","map","value","indexOf","splitText","block1","block2","wrapperElement","createTextNode","spanElement","heading","headingDescriptionText","children","body","nextElementSibling","bodyDescriptionText","setTypography","textElement","cs","fontSize","Math","round","replace","fontFamily","fontWeight","addEventListener","contentSections","mainNavElement","scrollTo","to","duration","difference","perTick","scrollTop","setTimeout","updateNavigation","target","actual","actualHeight","height","topMargin","marginTop","actualAnchor","id","offsetTop","scrollY","remove","section","item","toggle","link","event","preventDefault","header","hash","headerHeight","scrollHeight"],"mappings":"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","file":"main.f2d5935b.js","sourceRoot":"..\\src","sourcesContent":["/*******************\n\t\tcolor swatch\n\t********************/\n//convert rgba color to hex color\nconst rbgToHex = function(elem) {\n  if (elem.currentStyle) var bg = elem.currentStyle['background-color'];\n  else if (window.getComputedStyle)\n    var bg = document.defaultView\n      .getComputedStyle(elem, null)\n      .getPropertyValue('background-color');\n  if (bg.search('rgb') == -1) return bg;\n  else {\n    bg = bg.match(/^rgb\\((\\d+),\\s*(\\d+),\\s*(\\d+)\\)$/);\n    function hex(x) {\n      return ('0' + parseInt(x).toString(16)).slice(-2);\n    }\n    return '#' + hex(bg[1]) + hex(bg[2]) + hex(bg[3]);\n  }\n};\n\n//set a label for each color swatch\nconst colorBoxes = document.querySelectorAll('.cd-color-swatch');\ncolorBoxes.forEach(function(element) {\n  let newElement = document.createElement('b');\n  newElement.innerText = rbgToHex(element);\n  element.parentNode.appendChild(newElement);\n});\n\n/*******************\n\t\tbuttons\n  ********************/\n\nconst buttonsWrapper = document.querySelector('#buttons .cd-box'),\n  buttonsHtml = buttonsWrapper.innerHTML;\nconst containerHtml = document.createElement('div');\ncontainerHtml.classList.add('cd-box');\nbuttonsWrapper.parentNode.appendChild(containerHtml);\nbuttonsHtmlText = buttonsHtml.split('</button>');\n\nbuttonsHtmlText.map(function(value) {\n  if (value.indexOf('button') >= 0) {\n    const splitText = value.split('class=\"'),\n      block1 = splitText[0] + 'class=\"';\n    block2 = splitText[1].split('\"');\n\n    const wrapperElement = document.createElement('p');\n    wrapperElement.appendChild(document.createTextNode(block1));\n    const spanElement = document.createElement('span');\n    spanElement.appendChild(document.createTextNode(block2[0]));\n    wrapperElement.appendChild(spanElement);\n    containerHtml.appendChild(wrapperElement);\n    wrapperElement.appendChild(\n      document.createTextNode('\"' + block2[1] + '</button>')\n    );\n  }\n});\n\n/*******************\n\t\ttypography\n\t********************/\nconst heading = document.querySelector('#typography h1'),\n  headingDescriptionText = heading.children[0],\n  body = heading.nextElementSibling,\n  bodyDescriptionText = body.children[0];\n\nsetTypography(heading, headingDescriptionText);\nsetTypography(body, bodyDescriptionText);\nwindow.addEventListener('resize', function() {\n  setTypography(heading, headingDescriptionText);\n  setTypography(body, bodyDescriptionText);\n});\n\nfunction setTypography(element, textElement) {\n  const cs = document.defaultView.getComputedStyle(element, null);\n  let fontSize = Math.round(cs.fontSize.replace('px', '')) + 'px',\n    fontFamily = cs.fontFamily\n      .split(',')[0]\n      .replace(/\\'/g, '')\n      .replace(/\\\"/g, ''),\n    fontWeight = cs.fontWeight;\n  textElement.innerText = fontWeight + ' ' + fontFamily + ' ' + fontSize;\n}\n\n//   /*******************\n// \t\tmain  navigation\n// \t********************/\nconst contentSections = document.querySelectorAll('main section');\n//build navigation links\nconst mainNavElement = document.querySelector('.cd-main-nav');\nmainNavElement.innerHTML = '';\ncontentSections.forEach(function(section) {\n  let item = document.createElement('li');\n  item.innerHTML = `<a href=\"#${section.id}\">${\n    section.children[0].innerHTML\n  }</a>`;\n  mainNavElement.appendChild(item);\n});\n\n// open navigation on mobile\ndocument.querySelector('.cd-nav-trigger').addEventListener('click', function() {\n  document.querySelector('header').classList.toggle('nav-is-visible');\n});\n// smooth scroll to the selected section\ndocument.querySelectorAll('.cd-main-nav a[href^=\"#\"]').forEach(function(link) {\n  link.addEventListener('click', function(event) {\n    event.preventDefault();\n    const header = document.querySelector('header');\n    header.classList.remove('nav-is-visible');\n    const target = document.querySelector(this.hash),\n      topMargin = document.defaultView\n        .getComputedStyle(target, null)\n        .marginTop.replace('px', ''),\n      headerHeight = header.scrollHeight;\n    scrollTo(\n      document.body,\n      parseInt(target.offsetTop - headerHeight - topMargin),\n      200\n    );\n  });\n});\n\nfunction scrollTo(element, to, duration) {\n  if (duration <= 0) return;\n  var difference = to - element.scrollTop;\n  var perTick = (difference / duration) * 10;\n\n  setTimeout(function() {\n    element.scrollTop = element.scrollTop + perTick;\n    if (element.scrollTop === to) return;\n    scrollTo(element, to, duration - 10);\n  }, 10);\n}\n\n//update selected navigation element\nwindow.addEventListener('scroll', function(event) {\n  updateNavigation(event.target);\n});\n\nfunction updateNavigation() {\n  contentSections.forEach(function(target) {\n    const actual = target;\n    const cs = document.defaultView.getComputedStyle(actual, null);\n    const actualHeight = actual.height,\n      topMargin = cs.marginTop.replace('px', ''),\n      actualAnchor = document.querySelector(\n        '.cd-main-nav a[href=\"#' + actual.id + '\"]'\n      );\n\n    if (\n      parseInt(\n        actual.offsetTop -\n          document.querySelector('.cd-main-nav').height -\n          topMargin\n      ) <= window.scrollY &&\n      parseInt(actual.offsetTop + actualHeight - topMargin) > window.scrollY + 1\n    ) {\n      actualAnchor.classList.add('selected');\n    } else {\n      actualAnchor.classList.remove('selected');\n    }\n  });\n}\n"]}